// Implementation file for parser generated by fsyacc
module GslCore.Ast.GslParser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "./Ast/GslParser.fsy"

// F# code goes here
open System
open GslCore.Ast.Types
open GslCore.Pragma
open Amyris.Bio
open GslCore.Constants
open GslCore.Ast.ErrorHandling
open GslCore
 
let uppercase (s: string) = s.ToUpper()
 
let parse_error_rich = Some(GslParseErrorContext.handleParseError)


# 22 "Ast/GslParser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | LPAREN
  | RPAREN
  | PLUS
  | NEWLINE
  | EOF
  | UMINUS
  | DOUBLEQUOTE
  | START_ROUGHAGE
  | END_ROUGHAGE
  | GREATERTHAN
  | LESSTHAN
  | DOT
  | LET
  | CUT
  | END
  | OPEN
  | FOR
  | IN
  | DO
  | COLON
  | STAR
  | SLASH
  | AT
  | LBRACE
  | RBRACE
  | EXCLM
  | EQUALS
  | CARAT
  | COMMA
  | HYPHEN
  | OPENSQBRACKET
  | DOLLAR
  | CLOSESQBRACKET
  | SEMICOLON of (PUnit)
  | MARKER of (PUnit)
  | TILDE of (PUnit)
  | VARIABLE of (PString)
  | PNAME of (PString)
  | PVALUE of (PString)
  | DNAMUTATION of (PString)
  | AAMUTATION of (PString)
  | LINKER of (PString)
  | QUOTED_STRING of (PString)
  | DOCSTRING of (PString)
  | STRING of (PString)
  | INT of (PInt)
  | ID of (PString)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_PLUS
    | TOKEN_NEWLINE
    | TOKEN_EOF
    | TOKEN_UMINUS
    | TOKEN_DOUBLEQUOTE
    | TOKEN_START_ROUGHAGE
    | TOKEN_END_ROUGHAGE
    | TOKEN_GREATERTHAN
    | TOKEN_LESSTHAN
    | TOKEN_DOT
    | TOKEN_LET
    | TOKEN_CUT
    | TOKEN_END
    | TOKEN_OPEN
    | TOKEN_FOR
    | TOKEN_IN
    | TOKEN_DO
    | TOKEN_COLON
    | TOKEN_STAR
    | TOKEN_SLASH
    | TOKEN_AT
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_EXCLM
    | TOKEN_EQUALS
    | TOKEN_CARAT
    | TOKEN_COMMA
    | TOKEN_HYPHEN
    | TOKEN_OPENSQBRACKET
    | TOKEN_DOLLAR
    | TOKEN_CLOSESQBRACKET
    | TOKEN_SEMICOLON
    | TOKEN_MARKER
    | TOKEN_TILDE
    | TOKEN_VARIABLE
    | TOKEN_PNAME
    | TOKEN_PVALUE
    | TOKEN_DNAMUTATION
    | TOKEN_AAMUTATION
    | TOKEN_LINKER
    | TOKEN_QUOTED_STRING
    | TOKEN_DOCSTRING
    | TOKEN_STRING
    | TOKEN_INT
    | TOKEN_ID
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_Final
    | NONTERM_ScopedBlock
    | NONTERM_CodeSection
    | NONTERM_Line
    | NONTERM_PragmaValue
    | NONTERM_PragmaValues
    | NONTERM_Pragma
    | NONTERM_Pragmas
    | NONTERM_InlinePragmas
    | NONTERM_TypedVariableDeclaration
    | NONTERM_FunctionDefArgs
    | NONTERM_FunctionDeclaration
    | NONTERM_TypedValue
    | NONTERM_CommaSeparatedTypedValues
    | NONTERM_FunctionCall
    | NONTERM_IntLiteral
    | NONTERM_FloatLiteral
    | NONTERM_StringLiteral
    | NONTERM_Exp
    | NONTERM_Linker
    | NONTERM_Part
    | NONTERM_PartMaybeMods
    | NONTERM_PartMaybePragma
    | NONTERM_PartFwdRev
    | NONTERM_CompletePart
    | NONTERM_RelPos
    | NONTERM_Slice
    | NONTERM_Mod
    | NONTERM_ModList
    | NONTERM_PartList
    | NONTERM_AssemblyPart
    | NONTERM_L2IdWrap
    | NONTERM_L2Id
    | NONTERM_L2Promoter
    | NONTERM_L2Locus
    | NONTERM_L2ExpElement
    | NONTERM_L2ExpElementList
    | NONTERM_L2ExpLine
    | NONTERM_RID
    | NONTERM_RoughageMarker
    | NONTERM_RoughageMarkerMaybe
    | NONTERM_RoughagePartFwd
    | NONTERM_RoughagePartRev
    | NONTERM_RoughageElement
    | NONTERM_RoughageElementList
    | NONTERM_RoughageLocus
    | NONTERM_RoughageLine
    | NONTERM_RoughageLineList

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | LPAREN  -> 0 
  | RPAREN  -> 1 
  | PLUS  -> 2 
  | NEWLINE  -> 3 
  | EOF  -> 4 
  | UMINUS  -> 5 
  | DOUBLEQUOTE  -> 6 
  | START_ROUGHAGE  -> 7 
  | END_ROUGHAGE  -> 8 
  | GREATERTHAN  -> 9 
  | LESSTHAN  -> 10 
  | DOT  -> 11 
  | LET  -> 12 
  | CUT  -> 13 
  | END  -> 14 
  | OPEN  -> 15 
  | FOR  -> 16 
  | IN  -> 17 
  | DO  -> 18 
  | COLON  -> 19 
  | STAR  -> 20 
  | SLASH  -> 21 
  | AT  -> 22 
  | LBRACE  -> 23 
  | RBRACE  -> 24 
  | EXCLM  -> 25 
  | EQUALS  -> 26 
  | CARAT  -> 27 
  | COMMA  -> 28 
  | HYPHEN  -> 29 
  | OPENSQBRACKET  -> 30 
  | DOLLAR  -> 31 
  | CLOSESQBRACKET  -> 32 
  | SEMICOLON _ -> 33 
  | MARKER _ -> 34 
  | TILDE _ -> 35 
  | VARIABLE _ -> 36 
  | PNAME _ -> 37 
  | PVALUE _ -> 38 
  | DNAMUTATION _ -> 39 
  | AAMUTATION _ -> 40 
  | LINKER _ -> 41 
  | QUOTED_STRING _ -> 42 
  | DOCSTRING _ -> 43 
  | STRING _ -> 44 
  | INT _ -> 45 
  | ID _ -> 46 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_LPAREN 
  | 1 -> TOKEN_RPAREN 
  | 2 -> TOKEN_PLUS 
  | 3 -> TOKEN_NEWLINE 
  | 4 -> TOKEN_EOF 
  | 5 -> TOKEN_UMINUS 
  | 6 -> TOKEN_DOUBLEQUOTE 
  | 7 -> TOKEN_START_ROUGHAGE 
  | 8 -> TOKEN_END_ROUGHAGE 
  | 9 -> TOKEN_GREATERTHAN 
  | 10 -> TOKEN_LESSTHAN 
  | 11 -> TOKEN_DOT 
  | 12 -> TOKEN_LET 
  | 13 -> TOKEN_CUT 
  | 14 -> TOKEN_END 
  | 15 -> TOKEN_OPEN 
  | 16 -> TOKEN_FOR 
  | 17 -> TOKEN_IN 
  | 18 -> TOKEN_DO 
  | 19 -> TOKEN_COLON 
  | 20 -> TOKEN_STAR 
  | 21 -> TOKEN_SLASH 
  | 22 -> TOKEN_AT 
  | 23 -> TOKEN_LBRACE 
  | 24 -> TOKEN_RBRACE 
  | 25 -> TOKEN_EXCLM 
  | 26 -> TOKEN_EQUALS 
  | 27 -> TOKEN_CARAT 
  | 28 -> TOKEN_COMMA 
  | 29 -> TOKEN_HYPHEN 
  | 30 -> TOKEN_OPENSQBRACKET 
  | 31 -> TOKEN_DOLLAR 
  | 32 -> TOKEN_CLOSESQBRACKET 
  | 33 -> TOKEN_SEMICOLON 
  | 34 -> TOKEN_MARKER 
  | 35 -> TOKEN_TILDE 
  | 36 -> TOKEN_VARIABLE 
  | 37 -> TOKEN_PNAME 
  | 38 -> TOKEN_PVALUE 
  | 39 -> TOKEN_DNAMUTATION 
  | 40 -> TOKEN_AAMUTATION 
  | 41 -> TOKEN_LINKER 
  | 42 -> TOKEN_QUOTED_STRING 
  | 43 -> TOKEN_DOCSTRING 
  | 44 -> TOKEN_STRING 
  | 45 -> TOKEN_INT 
  | 46 -> TOKEN_ID 
  | 49 -> TOKEN_end_of_input
  | 47 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_Final 
    | 3 -> NONTERM_Final 
    | 4 -> NONTERM_ScopedBlock 
    | 5 -> NONTERM_CodeSection 
    | 6 -> NONTERM_CodeSection 
    | 7 -> NONTERM_Line 
    | 8 -> NONTERM_Line 
    | 9 -> NONTERM_Line 
    | 10 -> NONTERM_Line 
    | 11 -> NONTERM_Line 
    | 12 -> NONTERM_Line 
    | 13 -> NONTERM_Line 
    | 14 -> NONTERM_Line 
    | 15 -> NONTERM_Line 
    | 16 -> NONTERM_Line 
    | 17 -> NONTERM_PragmaValue 
    | 18 -> NONTERM_PragmaValue 
    | 19 -> NONTERM_PragmaValues 
    | 20 -> NONTERM_PragmaValues 
    | 21 -> NONTERM_Pragma 
    | 22 -> NONTERM_Pragma 
    | 23 -> NONTERM_Pragmas 
    | 24 -> NONTERM_Pragmas 
    | 25 -> NONTERM_InlinePragmas 
    | 26 -> NONTERM_InlinePragmas 
    | 27 -> NONTERM_TypedVariableDeclaration 
    | 28 -> NONTERM_TypedVariableDeclaration 
    | 29 -> NONTERM_TypedVariableDeclaration 
    | 30 -> NONTERM_TypedVariableDeclaration 
    | 31 -> NONTERM_FunctionDefArgs 
    | 32 -> NONTERM_FunctionDefArgs 
    | 33 -> NONTERM_FunctionDeclaration 
    | 34 -> NONTERM_FunctionDeclaration 
    | 35 -> NONTERM_TypedValue 
    | 36 -> NONTERM_TypedValue 
    | 37 -> NONTERM_TypedValue 
    | 38 -> NONTERM_TypedValue 
    | 39 -> NONTERM_CommaSeparatedTypedValues 
    | 40 -> NONTERM_CommaSeparatedTypedValues 
    | 41 -> NONTERM_FunctionCall 
    | 42 -> NONTERM_FunctionCall 
    | 43 -> NONTERM_IntLiteral 
    | 44 -> NONTERM_FloatLiteral 
    | 45 -> NONTERM_StringLiteral 
    | 46 -> NONTERM_Exp 
    | 47 -> NONTERM_Exp 
    | 48 -> NONTERM_Exp 
    | 49 -> NONTERM_Exp 
    | 50 -> NONTERM_Exp 
    | 51 -> NONTERM_Exp 
    | 52 -> NONTERM_Exp 
    | 53 -> NONTERM_Exp 
    | 54 -> NONTERM_Exp 
    | 55 -> NONTERM_Exp 
    | 56 -> NONTERM_Linker 
    | 57 -> NONTERM_Part 
    | 58 -> NONTERM_Part 
    | 59 -> NONTERM_Part 
    | 60 -> NONTERM_Part 
    | 61 -> NONTERM_Part 
    | 62 -> NONTERM_Part 
    | 63 -> NONTERM_Part 
    | 64 -> NONTERM_Part 
    | 65 -> NONTERM_Part 
    | 66 -> NONTERM_Part 
    | 67 -> NONTERM_Part 
    | 68 -> NONTERM_PartMaybeMods 
    | 69 -> NONTERM_PartMaybeMods 
    | 70 -> NONTERM_PartMaybePragma 
    | 71 -> NONTERM_PartMaybePragma 
    | 72 -> NONTERM_PartFwdRev 
    | 73 -> NONTERM_PartFwdRev 
    | 74 -> NONTERM_CompletePart 
    | 75 -> NONTERM_RelPos 
    | 76 -> NONTERM_RelPos 
    | 77 -> NONTERM_Slice 
    | 78 -> NONTERM_Slice 
    | 79 -> NONTERM_Slice 
    | 80 -> NONTERM_Slice 
    | 81 -> NONTERM_Mod 
    | 82 -> NONTERM_Mod 
    | 83 -> NONTERM_Mod 
    | 84 -> NONTERM_Mod 
    | 85 -> NONTERM_ModList 
    | 86 -> NONTERM_ModList 
    | 87 -> NONTERM_PartList 
    | 88 -> NONTERM_PartList 
    | 89 -> NONTERM_AssemblyPart 
    | 90 -> NONTERM_L2IdWrap 
    | 91 -> NONTERM_L2IdWrap 
    | 92 -> NONTERM_L2Id 
    | 93 -> NONTERM_L2Id 
    | 94 -> NONTERM_L2Promoter 
    | 95 -> NONTERM_L2Promoter 
    | 96 -> NONTERM_L2Promoter 
    | 97 -> NONTERM_L2Promoter 
    | 98 -> NONTERM_L2Locus 
    | 99 -> NONTERM_L2ExpElement 
    | 100 -> NONTERM_L2ExpElementList 
    | 101 -> NONTERM_L2ExpElementList 
    | 102 -> NONTERM_L2ExpLine 
    | 103 -> NONTERM_L2ExpLine 
    | 104 -> NONTERM_L2ExpLine 
    | 105 -> NONTERM_RID 
    | 106 -> NONTERM_RID 
    | 107 -> NONTERM_RoughageMarker 
    | 108 -> NONTERM_RoughageMarkerMaybe 
    | 109 -> NONTERM_RoughageMarkerMaybe 
    | 110 -> NONTERM_RoughagePartFwd 
    | 111 -> NONTERM_RoughagePartRev 
    | 112 -> NONTERM_RoughageElement 
    | 113 -> NONTERM_RoughageElement 
    | 114 -> NONTERM_RoughageElementList 
    | 115 -> NONTERM_RoughageElementList 
    | 116 -> NONTERM_RoughageLocus 
    | 117 -> NONTERM_RoughageLocus 
    | 118 -> NONTERM_RoughageLine 
    | 119 -> NONTERM_RoughageLine 
    | 120 -> NONTERM_RoughageLine 
    | 121 -> NONTERM_RoughageLineList 
    | 122 -> NONTERM_RoughageLineList 
    | 123 -> NONTERM_RoughageLineList 
    | 124 -> NONTERM_RoughageLineList 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 49 
let _fsyacc_tagOfErrorTerminal = 47

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | PLUS  -> "PLUS" 
  | NEWLINE  -> "NEWLINE" 
  | EOF  -> "EOF" 
  | UMINUS  -> "UMINUS" 
  | DOUBLEQUOTE  -> "DOUBLEQUOTE" 
  | START_ROUGHAGE  -> "START_ROUGHAGE" 
  | END_ROUGHAGE  -> "END_ROUGHAGE" 
  | GREATERTHAN  -> "GREATERTHAN" 
  | LESSTHAN  -> "LESSTHAN" 
  | DOT  -> "DOT" 
  | LET  -> "LET" 
  | CUT  -> "CUT" 
  | END  -> "END" 
  | OPEN  -> "OPEN" 
  | FOR  -> "FOR" 
  | IN  -> "IN" 
  | DO  -> "DO" 
  | COLON  -> "COLON" 
  | STAR  -> "STAR" 
  | SLASH  -> "SLASH" 
  | AT  -> "AT" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | EXCLM  -> "EXCLM" 
  | EQUALS  -> "EQUALS" 
  | CARAT  -> "CARAT" 
  | COMMA  -> "COMMA" 
  | HYPHEN  -> "HYPHEN" 
  | OPENSQBRACKET  -> "OPENSQBRACKET" 
  | DOLLAR  -> "DOLLAR" 
  | CLOSESQBRACKET  -> "CLOSESQBRACKET" 
  | SEMICOLON _ -> "SEMICOLON" 
  | MARKER _ -> "MARKER" 
  | TILDE _ -> "TILDE" 
  | VARIABLE _ -> "VARIABLE" 
  | PNAME _ -> "PNAME" 
  | PVALUE _ -> "PVALUE" 
  | DNAMUTATION _ -> "DNAMUTATION" 
  | AAMUTATION _ -> "AAMUTATION" 
  | LINKER _ -> "LINKER" 
  | QUOTED_STRING _ -> "QUOTED_STRING" 
  | DOCSTRING _ -> "DOCSTRING" 
  | STRING _ -> "STRING" 
  | INT _ -> "INT" 
  | ID _ -> "ID" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | NEWLINE  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | UMINUS  -> (null : System.Object) 
  | DOUBLEQUOTE  -> (null : System.Object) 
  | START_ROUGHAGE  -> (null : System.Object) 
  | END_ROUGHAGE  -> (null : System.Object) 
  | GREATERTHAN  -> (null : System.Object) 
  | LESSTHAN  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | CUT  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | SLASH  -> (null : System.Object) 
  | AT  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | EXCLM  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | CARAT  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | HYPHEN  -> (null : System.Object) 
  | OPENSQBRACKET  -> (null : System.Object) 
  | DOLLAR  -> (null : System.Object) 
  | CLOSESQBRACKET  -> (null : System.Object) 
  | SEMICOLON _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | MARKER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TILDE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | VARIABLE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PNAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PVALUE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DNAMUTATION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | AAMUTATION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LINKER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | QUOTED_STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DOCSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 1us; 65535us; 0us; 2us; 5us; 65535us; 0us; 22us; 6us; 22us; 9us; 22us; 52us; 22us; 56us; 22us; 5us; 65535us; 0us; 3us; 6us; 7us; 9us; 10us; 52us; 53us; 56us; 57us; 5us; 65535us; 0us; 9us; 6us; 9us; 9us; 9us; 52us; 9us; 56us; 9us; 2us; 65535us; 25us; 25us; 27us; 25us; 2us; 65535us; 25us; 26us; 27us; 28us; 7us; 65535us; 0us; 18us; 6us; 18us; 9us; 18us; 29us; 29us; 31us; 29us; 52us; 18us; 56us; 18us; 2us; 65535us; 29us; 30us; 31us; 32us; 2us; 65535us; 33us; 34us; 121us; 122us; 5us; 65535us; 0us; 19us; 6us; 19us; 9us; 19us; 52us; 19us; 56us; 19us; 2us; 65535us; 47us; 48us; 49us; 50us; 5us; 65535us; 0us; 21us; 6us; 21us; 9us; 21us; 52us; 21us; 56us; 21us; 2us; 65535us; 64us; 63us; 67us; 63us; 2us; 65535us; 64us; 65us; 67us; 68us; 5us; 65535us; 0us; 20us; 6us; 20us; 9us; 20us; 52us; 20us; 56us; 20us; 16us; 65535us; 37us; 75us; 64us; 75us; 67us; 75us; 80us; 75us; 81us; 75us; 84us; 75us; 91us; 75us; 92us; 75us; 93us; 75us; 94us; 75us; 128us; 75us; 130us; 75us; 133us; 75us; 135us; 75us; 138us; 75us; 141us; 75us; 16us; 65535us; 37us; 77us; 64us; 77us; 67us; 77us; 80us; 77us; 81us; 77us; 84us; 77us; 91us; 77us; 92us; 77us; 93us; 77us; 94us; 77us; 128us; 77us; 130us; 77us; 133us; 77us; 135us; 77us; 138us; 77us; 141us; 77us; 16us; 65535us; 37us; 76us; 64us; 76us; 67us; 76us; 80us; 76us; 81us; 76us; 84us; 76us; 91us; 76us; 92us; 76us; 93us; 76us; 94us; 76us; 128us; 76us; 130us; 76us; 133us; 76us; 135us; 76us; 138us; 76us; 141us; 76us; 16us; 65535us; 37us; 40us; 64us; 60us; 67us; 60us; 80us; 82us; 81us; 82us; 84us; 85us; 91us; 86us; 92us; 87us; 93us; 88us; 94us; 89us; 128us; 90us; 130us; 90us; 133us; 90us; 135us; 90us; 138us; 90us; 141us; 90us; 14us; 65535us; 0us; 99us; 6us; 99us; 9us; 99us; 37us; 99us; 52us; 99us; 56us; 99us; 64us; 99us; 67us; 99us; 81us; 99us; 96us; 99us; 124us; 99us; 153us; 99us; 174us; 99us; 177us; 99us; 14us; 65535us; 0us; 119us; 6us; 119us; 9us; 119us; 37us; 119us; 52us; 119us; 56us; 119us; 64us; 119us; 67us; 119us; 81us; 119us; 96us; 119us; 124us; 119us; 153us; 119us; 174us; 119us; 177us; 119us; 14us; 65535us; 0us; 121us; 6us; 121us; 9us; 121us; 37us; 121us; 52us; 121us; 56us; 121us; 64us; 121us; 67us; 121us; 81us; 121us; 96us; 121us; 124us; 121us; 153us; 121us; 174us; 121us; 177us; 121us; 14us; 65535us; 0us; 123us; 6us; 123us; 9us; 123us; 37us; 123us; 52us; 123us; 56us; 123us; 64us; 123us; 67us; 123us; 81us; 123us; 96us; 123us; 124us; 125us; 153us; 123us; 174us; 123us; 177us; 123us; 13us; 65535us; 0us; 126us; 6us; 126us; 9us; 126us; 37us; 126us; 52us; 126us; 56us; 126us; 64us; 126us; 67us; 126us; 81us; 126us; 96us; 126us; 153us; 126us; 174us; 126us; 177us; 126us; 13us; 65535us; 0us; 152us; 6us; 152us; 9us; 152us; 37us; 42us; 52us; 152us; 56us; 152us; 64us; 61us; 67us; 61us; 81us; 151us; 96us; 151us; 153us; 151us; 174us; 167us; 177us; 167us; 6us; 65535us; 128us; 129us; 130us; 131us; 133us; 134us; 135us; 136us; 138us; 139us; 141us; 142us; 2us; 65535us; 119us; 146us; 120us; 146us; 2us; 65535us; 119us; 149us; 120us; 150us; 1us; 65535us; 119us; 120us; 11us; 65535us; 0us; 155us; 6us; 155us; 9us; 155us; 37us; 155us; 52us; 155us; 56us; 155us; 64us; 155us; 67us; 155us; 81us; 155us; 96us; 155us; 153us; 154us; 10us; 65535us; 0us; 12us; 6us; 12us; 9us; 12us; 37us; 44us; 52us; 12us; 56us; 12us; 64us; 62us; 67us; 62us; 81us; 97us; 96us; 97us; 7us; 65535us; 0us; 159us; 6us; 159us; 9us; 159us; 52us; 159us; 56us; 159us; 160us; 161us; 171us; 159us; 6us; 65535us; 0us; 168us; 6us; 168us; 9us; 168us; 52us; 168us; 56us; 168us; 171us; 172us; 7us; 65535us; 0us; 170us; 6us; 170us; 9us; 170us; 52us; 170us; 56us; 170us; 174us; 170us; 177us; 170us; 5us; 65535us; 0us; 176us; 6us; 176us; 9us; 176us; 52us; 176us; 56us; 176us; 7us; 65535us; 0us; 173us; 6us; 173us; 9us; 173us; 52us; 173us; 56us; 173us; 174us; 173us; 177us; 173us; 7us; 65535us; 0us; 179us; 6us; 179us; 9us; 179us; 52us; 179us; 56us; 179us; 174us; 175us; 177us; 178us; 5us; 65535us; 0us; 14us; 6us; 14us; 9us; 14us; 52us; 14us; 56us; 14us; 8us; 65535us; 15us; 189us; 190us; 191us; 192us; 193us; 197us; 187us; 202us; 188us; 208us; 188us; 211us; 189us; 212us; 189us; 3us; 65535us; 194us; 186us; 198us; 186us; 204us; 205us; 2us; 65535us; 194us; 195us; 198us; 199us; 6us; 65535us; 15us; 194us; 197us; 198us; 202us; 194us; 208us; 194us; 211us; 194us; 212us; 194us; 5us; 65535us; 15us; 196us; 202us; 196us; 208us; 196us; 211us; 196us; 212us; 196us; 5us; 65535us; 15us; 200us; 202us; 200us; 208us; 200us; 211us; 200us; 212us; 200us; 5us; 65535us; 15us; 210us; 202us; 203us; 208us; 209us; 211us; 210us; 212us; 210us; 3us; 65535us; 15us; 206us; 211us; 206us; 212us; 206us; 3us; 65535us; 15us; 211us; 211us; 211us; 212us; 211us; 3us; 65535us; 15us; 16us; 211us; 214us; 212us; 213us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 5us; 11us; 17us; 23us; 26us; 29us; 37us; 40us; 43us; 49us; 52us; 58us; 61us; 64us; 70us; 87us; 104us; 121us; 138us; 153us; 168us; 183us; 198us; 212us; 226us; 233us; 236us; 239us; 241us; 253us; 264us; 272us; 279us; 287us; 293us; 301us; 309us; 315us; 324us; 328us; 331us; 338us; 344us; 350us; 356us; 360us; 364us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 4us; 2us; 5us; 6us; 1us; 6us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 14us; 1us; 15us; 1us; 16us; 1us; 17us; 1us; 18us; 2us; 19us; 20us; 1us; 19us; 2us; 21us; 22us; 1us; 21us; 2us; 23us; 24us; 1us; 24us; 2us; 25us; 26us; 2us; 25us; 26us; 2us; 25us; 26us; 1us; 26us; 6us; 27us; 28us; 29us; 30us; 33us; 34us; 6us; 27us; 28us; 29us; 30us; 33us; 34us; 4us; 27us; 28us; 29us; 30us; 3us; 27us; 49us; 66us; 1us; 27us; 5us; 28us; 52us; 53us; 54us; 55us; 1us; 28us; 3us; 29us; 87us; 88us; 1us; 29us; 1us; 30us; 1us; 30us; 2us; 31us; 32us; 1us; 32us; 1us; 32us; 2us; 33us; 34us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 3us; 35us; 49us; 66us; 5us; 36us; 52us; 53us; 54us; 55us; 3us; 37us; 87us; 88us; 1us; 38us; 2us; 39us; 40us; 1us; 39us; 1us; 39us; 5us; 41us; 42us; 59us; 90us; 96us; 2us; 41us; 42us; 1us; 41us; 1us; 41us; 1us; 42us; 2us; 43us; 44us; 1us; 44us; 1us; 44us; 1us; 45us; 1us; 46us; 1us; 47us; 1us; 48us; 1us; 49us; 2us; 49us; 66us; 1us; 50us; 2us; 50us; 57us; 5us; 50us; 52us; 53us; 54us; 55us; 1us; 50us; 1us; 51us; 5us; 51us; 52us; 53us; 54us; 55us; 5us; 52us; 52us; 53us; 54us; 55us; 5us; 52us; 53us; 53us; 54us; 55us; 5us; 52us; 53us; 54us; 54us; 55us; 5us; 52us; 53us; 54us; 55us; 55us; 6us; 52us; 53us; 54us; 55us; 75us; 76us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 57us; 1us; 57us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 59us; 2us; 59us; 96us; 1us; 60us; 4us; 61us; 62us; 63us; 64us; 1us; 61us; 1us; 61us; 3us; 62us; 63us; 64us; 2us; 62us; 63us; 1us; 62us; 1us; 63us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 67us; 2us; 68us; 69us; 2us; 69us; 86us; 2us; 70us; 71us; 1us; 70us; 1us; 72us; 1us; 73us; 1us; 73us; 1us; 74us; 1us; 76us; 4us; 77us; 78us; 79us; 80us; 2us; 77us; 79us; 2us; 77us; 79us; 1us; 77us; 1us; 77us; 2us; 78us; 80us; 2us; 78us; 80us; 2us; 78us; 80us; 1us; 78us; 1us; 78us; 1us; 79us; 1us; 79us; 1us; 79us; 1us; 80us; 1us; 80us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 84us; 1us; 85us; 1us; 86us; 2us; 87us; 88us; 3us; 87us; 88us; 97us; 1us; 88us; 1us; 88us; 1us; 89us; 1us; 90us; 1us; 91us; 3us; 91us; 94us; 95us; 2us; 92us; 93us; 1us; 93us; 1us; 93us; 2us; 94us; 95us; 1us; 95us; 1us; 95us; 1us; 96us; 1us; 96us; 1us; 97us; 1us; 98us; 1us; 98us; 1us; 99us; 1us; 99us; 1us; 99us; 2us; 100us; 101us; 1us; 101us; 1us; 101us; 2us; 102us; 103us; 1us; 103us; 1us; 103us; 1us; 104us; 2us; 105us; 106us; 1us; 106us; 1us; 106us; 1us; 107us; 1us; 107us; 1us; 107us; 1us; 108us; 1us; 110us; 2us; 110us; 111us; 4us; 110us; 111us; 116us; 117us; 1us; 110us; 1us; 110us; 1us; 111us; 1us; 111us; 1us; 112us; 1us; 112us; 1us; 113us; 1us; 113us; 1us; 113us; 1us; 113us; 2us; 114us; 115us; 1us; 115us; 1us; 115us; 1us; 115us; 2us; 116us; 117us; 1us; 117us; 2us; 118us; 119us; 1us; 119us; 1us; 119us; 1us; 119us; 1us; 120us; 2us; 121us; 124us; 2us; 122us; 123us; 1us; 122us; 1us; 124us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 21us; 23us; 25us; 27us; 29us; 31us; 33us; 35us; 37us; 39us; 41us; 43us; 45us; 47us; 49us; 51us; 54us; 56us; 59us; 61us; 64us; 66us; 69us; 72us; 75us; 77us; 84us; 91us; 96us; 100us; 102us; 108us; 110us; 114us; 116us; 118us; 120us; 123us; 125us; 127us; 130us; 132us; 134us; 136us; 138us; 140us; 142us; 144us; 146us; 148us; 152us; 158us; 162us; 164us; 167us; 169us; 171us; 177us; 180us; 182us; 184us; 186us; 189us; 191us; 193us; 195us; 197us; 199us; 201us; 203us; 206us; 208us; 211us; 217us; 219us; 221us; 227us; 233us; 239us; 245us; 251us; 258us; 260us; 262us; 264us; 266us; 268us; 270us; 272us; 274us; 276us; 278us; 280us; 282us; 285us; 287us; 292us; 294us; 296us; 300us; 303us; 305us; 307us; 309us; 311us; 313us; 315us; 317us; 319us; 321us; 324us; 327us; 330us; 332us; 334us; 336us; 338us; 340us; 342us; 347us; 350us; 353us; 355us; 357us; 360us; 363us; 366us; 368us; 370us; 372us; 374us; 376us; 378us; 380us; 382us; 384us; 386us; 388us; 390us; 392us; 394us; 396us; 399us; 403us; 405us; 407us; 409us; 411us; 413us; 417us; 420us; 422us; 424us; 427us; 429us; 431us; 433us; 435us; 437us; 439us; 441us; 443us; 445us; 447us; 450us; 452us; 454us; 457us; 459us; 461us; 463us; 466us; 468us; 470us; 472us; 474us; 476us; 478us; 480us; 483us; 488us; 490us; 492us; 494us; 496us; 498us; 500us; 502us; 504us; 506us; 508us; 511us; 513us; 515us; 517us; 520us; 522us; 525us; 527us; 529us; 531us; 533us; 536us; 539us; 541us; |]
let _fsyacc_action_rows = 215
let _fsyacc_actionTableElements = [|17us; 32768us; 0us; 96us; 3us; 11us; 4us; 5us; 7us; 15us; 12us; 35us; 18us; 6us; 21us; 105us; 22us; 117us; 25us; 124us; 34us; 104us; 35us; 115us; 36us; 116us; 37us; 27us; 41us; 95us; 43us; 13us; 44us; 158us; 46us; 66us; 0us; 49152us; 0us; 16385us; 1us; 32768us; 4us; 4us; 0us; 16386us; 0us; 16387us; 16us; 32768us; 0us; 96us; 3us; 11us; 7us; 15us; 12us; 35us; 18us; 6us; 21us; 105us; 22us; 117us; 25us; 124us; 34us; 104us; 35us; 115us; 36us; 116us; 37us; 27us; 41us; 95us; 43us; 13us; 44us; 158us; 46us; 66us; 1us; 32768us; 14us; 8us; 0us; 16388us; 16us; 16389us; 0us; 96us; 3us; 11us; 7us; 15us; 12us; 35us; 18us; 6us; 21us; 105us; 22us; 117us; 25us; 124us; 34us; 104us; 35us; 115us; 36us; 116us; 37us; 27us; 41us; 95us; 43us; 13us; 44us; 158us; 46us; 66us; 0us; 16390us; 0us; 16391us; 0us; 16392us; 0us; 16393us; 0us; 16394us; 2us; 32768us; 3us; 212us; 46us; 180us; 1us; 32768us; 8us; 17us; 0us; 16395us; 0us; 16396us; 0us; 16397us; 0us; 16398us; 0us; 16399us; 0us; 16400us; 0us; 16401us; 0us; 16402us; 2us; 16404us; 36us; 23us; 38us; 24us; 0us; 16403us; 2us; 16406us; 36us; 23us; 38us; 24us; 0us; 16405us; 1us; 16407us; 37us; 27us; 0us; 16408us; 1us; 32768us; 37us; 27us; 1us; 32768us; 24us; 33us; 1us; 16409us; 23us; 31us; 0us; 16410us; 1us; 32768us; 46us; 36us; 2us; 32768us; 0us; 49us; 26us; 37us; 12us; 32768us; 0us; 81us; 21us; 105us; 22us; 117us; 25us; 124us; 29us; 84us; 34us; 104us; 35us; 115us; 36us; 38us; 41us; 95us; 44us; 74us; 45us; 71us; 46us; 102us; 7us; 16433us; 3us; 39us; 11us; 16450us; 23us; 16450us; 30us; 16450us; 33us; 16450us; 39us; 16450us; 40us; 16450us; 0us; 16411us; 5us; 32768us; 2us; 93us; 3us; 41us; 20us; 91us; 21us; 92us; 29us; 94us; 0us; 16412us; 2us; 16471us; 3us; 43us; 33us; 153us; 0us; 16413us; 1us; 32768us; 3us; 45us; 0us; 16414us; 1us; 16415us; 28us; 47us; 1us; 32768us; 46us; 46us; 0us; 16416us; 2us; 32768us; 1us; 55us; 46us; 46us; 1us; 32768us; 1us; 51us; 1us; 32768us; 26us; 52us; 16us; 32768us; 0us; 96us; 3us; 11us; 7us; 15us; 12us; 35us; 18us; 6us; 21us; 105us; 22us; 117us; 25us; 124us; 34us; 104us; 35us; 115us; 36us; 116us; 37us; 27us; 41us; 95us; 43us; 13us; 44us; 158us; 46us; 66us; 1us; 32768us; 14us; 54us; 0us; 16417us; 1us; 32768us; 26us; 56us; 16us; 32768us; 0us; 96us; 3us; 11us; 7us; 15us; 12us; 35us; 18us; 6us; 21us; 105us; 22us; 117us; 25us; 124us; 34us; 104us; 35us; 115us; 36us; 116us; 37us; 27us; 41us; 95us; 43us; 13us; 44us; 158us; 46us; 66us; 1us; 32768us; 14us; 58us; 0us; 16418us; 10us; 16419us; 2us; 16433us; 11us; 16450us; 20us; 16433us; 21us; 16433us; 23us; 16450us; 29us; 16433us; 30us; 16450us; 33us; 16450us; 39us; 16450us; 40us; 16450us; 4us; 16420us; 2us; 93us; 20us; 91us; 21us; 92us; 29us; 94us; 1us; 16421us; 33us; 153us; 0us; 16422us; 1us; 16424us; 28us; 64us; 12us; 32768us; 0us; 81us; 21us; 105us; 22us; 117us; 25us; 124us; 29us; 84us; 34us; 104us; 35us; 115us; 36us; 59us; 41us; 95us; 44us; 74us; 45us; 71us; 46us; 102us; 0us; 16423us; 3us; 16443us; 0us; 67us; 11us; 165us; 27us; 16474us; 13us; 32768us; 0us; 81us; 1us; 70us; 21us; 105us; 22us; 117us; 25us; 124us; 29us; 84us; 34us; 104us; 35us; 115us; 36us; 59us; 41us; 95us; 44us; 74us; 45us; 71us; 46us; 102us; 1us; 32768us; 1us; 69us; 0us; 16425us; 0us; 16426us; 1us; 16427us; 11us; 72us; 1us; 32768us; 45us; 73us; 0us; 16428us; 0us; 16429us; 0us; 16430us; 0us; 16431us; 0us; 16432us; 0us; 16433us; 6us; 16433us; 11us; 16450us; 23us; 16450us; 30us; 16450us; 33us; 16450us; 39us; 16450us; 40us; 16450us; 5us; 32768us; 0us; 80us; 29us; 84us; 36us; 78us; 44us; 74us; 45us; 71us; 12us; 32768us; 0us; 81us; 21us; 105us; 22us; 117us; 25us; 124us; 29us; 84us; 34us; 104us; 35us; 115us; 36us; 79us; 41us; 95us; 44us; 74us; 45us; 71us; 46us; 102us; 5us; 32768us; 1us; 83us; 2us; 93us; 20us; 91us; 21us; 92us; 29us; 94us; 0us; 16434us; 5us; 32768us; 0us; 80us; 29us; 84us; 36us; 78us; 44us; 74us; 45us; 71us; 0us; 16435us; 0us; 16436us; 0us; 16437us; 2us; 16438us; 20us; 91us; 21us; 92us; 2us; 16439us; 20us; 91us; 21us; 92us; 5us; 16459us; 2us; 93us; 20us; 91us; 21us; 92us; 29us; 94us; 46us; 127us; 5us; 32768us; 0us; 80us; 29us; 84us; 36us; 78us; 44us; 74us; 45us; 71us; 5us; 32768us; 0us; 80us; 29us; 84us; 36us; 78us; 44us; 74us; 45us; 71us; 5us; 32768us; 0us; 80us; 29us; 84us; 36us; 78us; 44us; 74us; 45us; 71us; 5us; 32768us; 0us; 80us; 29us; 84us; 36us; 78us; 44us; 74us; 45us; 71us; 0us; 16440us; 9us; 32768us; 0us; 96us; 21us; 105us; 22us; 117us; 25us; 124us; 34us; 104us; 35us; 115us; 36us; 116us; 41us; 95us; 46us; 102us; 1us; 32768us; 1us; 98us; 0us; 16441us; 1us; 32768us; 29us; 100us; 1us; 32768us; 46us; 101us; 0us; 16442us; 0us; 16443us; 1us; 16443us; 11us; 165us; 0us; 16444us; 2us; 32768us; 31us; 108us; 46us; 106us; 1us; 32768us; 21us; 107us; 0us; 16445us; 2us; 32768us; 20us; 113us; 46us; 109us; 2us; 32768us; 20us; 111us; 21us; 110us; 0us; 16446us; 1us; 32768us; 21us; 112us; 0us; 16447us; 1us; 32768us; 21us; 114us; 0us; 16448us; 0us; 16449us; 0us; 16450us; 1us; 32768us; 46us; 118us; 0us; 16451us; 4us; 16452us; 11us; 147us; 30us; 128us; 39us; 144us; 40us; 145us; 4us; 16453us; 11us; 147us; 30us; 128us; 39us; 144us; 40us; 145us; 1us; 16455us; 23us; 31us; 0us; 16454us; 0us; 16456us; 8us; 32768us; 0us; 96us; 21us; 105us; 22us; 117us; 34us; 104us; 35us; 115us; 36us; 116us; 41us; 95us; 46us; 102us; 0us; 16457us; 0us; 16458us; 0us; 16460us; 6us; 32768us; 0us; 80us; 29us; 84us; 35us; 133us; 36us; 78us; 44us; 74us; 45us; 71us; 1us; 32768us; 19us; 130us; 6us; 32768us; 0us; 80us; 29us; 84us; 35us; 138us; 36us; 78us; 44us; 74us; 45us; 71us; 1us; 32768us; 32us; 132us; 0us; 16461us; 5us; 32768us; 0us; 80us; 29us; 84us; 36us; 78us; 44us; 74us; 45us; 71us; 1us; 32768us; 19us; 135us; 6us; 32768us; 0us; 80us; 29us; 84us; 35us; 141us; 36us; 78us; 44us; 74us; 45us; 71us; 1us; 32768us; 32us; 137us; 0us; 16462us; 5us; 32768us; 0us; 80us; 29us; 84us; 36us; 78us; 44us; 74us; 45us; 71us; 1us; 32768us; 32us; 140us; 0us; 16463us; 5us; 32768us; 0us; 80us; 29us; 84us; 36us; 78us; 44us; 74us; 45us; 71us; 1us; 32768us; 32us; 143us; 0us; 16464us; 0us; 16465us; 0us; 16466us; 0us; 16467us; 1us; 32768us; 46us; 148us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 1us; 16471us; 33us; 153us; 2us; 16471us; 9us; 16481us; 33us; 153us; 9us; 32768us; 0us; 96us; 21us; 105us; 22us; 117us; 25us; 124us; 34us; 104us; 35us; 115us; 36us; 116us; 41us; 95us; 46us; 102us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 0us; 16475us; 2us; 16475us; 9us; 16478us; 11us; 163us; 1us; 16476us; 11us; 160us; 2us; 32768us; 44us; 157us; 46us; 156us; 0us; 16477us; 1us; 16478us; 11us; 163us; 1us; 32768us; 44us; 164us; 0us; 16479us; 1us; 32768us; 46us; 166us; 0us; 16480us; 0us; 16481us; 1us; 32768us; 27us; 169us; 0us; 16482us; 1us; 32768us; 9us; 171us; 2us; 32768us; 44us; 157us; 46us; 156us; 0us; 16483us; 1us; 16484us; 33us; 174us; 10us; 32768us; 0us; 96us; 21us; 105us; 22us; 117us; 25us; 124us; 34us; 104us; 35us; 115us; 36us; 116us; 41us; 95us; 44us; 162us; 46us; 103us; 0us; 16485us; 1us; 16486us; 33us; 177us; 10us; 32768us; 0us; 96us; 21us; 105us; 22us; 117us; 25us; 124us; 34us; 104us; 35us; 115us; 36us; 116us; 41us; 95us; 44us; 162us; 46us; 103us; 0us; 16487us; 0us; 16488us; 1us; 16489us; 11us; 181us; 1us; 32768us; 46us; 182us; 0us; 16490us; 1us; 32768us; 46us; 184us; 1us; 32768us; 32us; 185us; 0us; 16491us; 0us; 16492us; 1us; 32768us; 9us; 190us; 2us; 32768us; 9us; 190us; 10us; 192us; 3us; 32768us; 9us; 190us; 10us; 192us; 27us; 204us; 1us; 32768us; 46us; 180us; 0us; 16494us; 1us; 32768us; 46us; 180us; 0us; 16495us; 1us; 16493us; 30us; 183us; 0us; 16496us; 1us; 32768us; 29us; 197us; 1us; 32768us; 46us; 180us; 1us; 16493us; 30us; 183us; 0us; 16497us; 1us; 16498us; 19us; 201us; 1us; 32768us; 19us; 202us; 1us; 32768us; 46us; 180us; 0us; 16499us; 1us; 16500us; 30us; 183us; 0us; 16501us; 1us; 16502us; 19us; 207us; 1us; 32768us; 19us; 208us; 1us; 32768us; 46us; 180us; 0us; 16503us; 0us; 16504us; 2us; 16505us; 3us; 212us; 46us; 180us; 2us; 16507us; 3us; 212us; 46us; 180us; 0us; 16506us; 0us; 16508us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 18us; 19us; 20us; 22us; 23us; 24us; 41us; 43us; 44us; 61us; 62us; 63us; 64us; 65us; 66us; 69us; 71us; 72us; 73us; 74us; 75us; 76us; 77us; 78us; 79us; 82us; 83us; 86us; 87us; 89us; 90us; 92us; 94us; 96us; 97us; 99us; 102us; 115us; 123us; 124us; 130us; 131us; 134us; 135us; 137us; 138us; 140us; 142us; 143us; 146us; 148us; 150us; 167us; 169us; 170us; 172us; 189us; 191us; 192us; 203us; 208us; 210us; 211us; 213us; 226us; 227us; 231us; 245us; 247us; 248us; 249us; 251us; 253us; 254us; 255us; 256us; 257us; 258us; 259us; 266us; 272us; 285us; 291us; 292us; 298us; 299us; 300us; 301us; 304us; 307us; 313us; 319us; 325us; 331us; 337us; 338us; 348us; 350us; 351us; 353us; 355us; 356us; 357us; 359us; 360us; 363us; 365us; 366us; 369us; 372us; 373us; 375us; 376us; 378us; 379us; 380us; 381us; 383us; 384us; 389us; 394us; 396us; 397us; 398us; 407us; 408us; 409us; 410us; 417us; 419us; 426us; 428us; 429us; 435us; 437us; 444us; 446us; 447us; 453us; 455us; 456us; 462us; 464us; 465us; 466us; 467us; 468us; 470us; 471us; 472us; 473us; 475us; 478us; 488us; 489us; 490us; 491us; 492us; 495us; 497us; 500us; 501us; 503us; 505us; 506us; 508us; 509us; 510us; 512us; 513us; 515us; 518us; 519us; 521us; 532us; 533us; 535us; 546us; 547us; 548us; 550us; 552us; 553us; 555us; 557us; 558us; 559us; 561us; 564us; 568us; 570us; 571us; 573us; 574us; 576us; 577us; 579us; 581us; 583us; 584us; 586us; 588us; 590us; 591us; 593us; 594us; 596us; 598us; 600us; 601us; 602us; 605us; 608us; 609us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 2us; 1us; 3us; 1us; 2us; 1us; 1us; 1us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 1us; 2us; 3us; 4us; 5us; 5us; 5us; 5us; 1us; 3us; 8us; 7us; 1us; 1us; 1us; 1us; 3us; 1us; 4us; 3us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 3us; 2us; 3us; 3us; 3us; 3us; 1us; 3us; 3us; 1us; 1us; 3us; 4us; 5us; 4us; 1us; 1us; 2us; 1us; 2us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 5us; 6us; 6us; 7us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 3us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 3us; 1us; 2us; 3us; 1us; 3us; 1us; 3us; 1us; 1us; 3us; 3us; 1us; 0us; 3us; 3us; 2us; 4us; 1us; 4us; 2us; 3us; 1us; 4us; 1us; 1us; 2us; 1us; 2us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 4us; 4us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 14us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 17us; 18us; 19us; 20us; 20us; 20us; 20us; 20us; 20us; 20us; 20us; 20us; 20us; 21us; 22us; 22us; 22us; 22us; 22us; 22us; 22us; 22us; 22us; 22us; 22us; 23us; 23us; 24us; 24us; 25us; 25us; 26us; 27us; 27us; 28us; 28us; 28us; 28us; 29us; 29us; 29us; 29us; 30us; 30us; 31us; 31us; 32us; 33us; 33us; 34us; 34us; 35us; 35us; 35us; 35us; 36us; 37us; 38us; 38us; 39us; 39us; 39us; 40us; 40us; 41us; 42us; 42us; 43us; 44us; 45us; 45us; 46us; 46us; 47us; 47us; 48us; 48us; 48us; 49us; 49us; 49us; 49us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 65535us; 16386us; 16387us; 65535us; 65535us; 16388us; 65535us; 16390us; 16391us; 16392us; 16393us; 16394us; 65535us; 65535us; 16395us; 16396us; 16397us; 16398us; 16399us; 16400us; 16401us; 16402us; 65535us; 16403us; 65535us; 16405us; 65535us; 16408us; 65535us; 65535us; 65535us; 16410us; 65535us; 65535us; 65535us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 65535us; 16414us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 16422us; 65535us; 65535us; 16423us; 65535us; 65535us; 65535us; 16425us; 16426us; 65535us; 65535us; 16428us; 16429us; 16430us; 16431us; 16432us; 16433us; 65535us; 65535us; 65535us; 65535us; 16434us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16440us; 65535us; 65535us; 16441us; 65535us; 65535us; 16442us; 16443us; 65535us; 16444us; 65535us; 65535us; 16445us; 65535us; 65535us; 16446us; 65535us; 16447us; 65535us; 16448us; 16449us; 16450us; 65535us; 16451us; 65535us; 65535us; 65535us; 16454us; 16456us; 65535us; 16457us; 16458us; 16460us; 65535us; 65535us; 65535us; 65535us; 16461us; 65535us; 65535us; 65535us; 65535us; 16462us; 65535us; 65535us; 16463us; 65535us; 65535us; 16464us; 16465us; 16466us; 16467us; 65535us; 16468us; 16469us; 16470us; 65535us; 65535us; 65535us; 16472us; 16473us; 16474us; 16475us; 65535us; 65535us; 65535us; 16477us; 65535us; 65535us; 16479us; 65535us; 16480us; 16481us; 65535us; 16482us; 65535us; 65535us; 16483us; 65535us; 65535us; 16485us; 65535us; 65535us; 16487us; 16488us; 65535us; 65535us; 16490us; 65535us; 65535us; 16491us; 16492us; 65535us; 65535us; 65535us; 65535us; 16494us; 65535us; 16495us; 65535us; 16496us; 65535us; 65535us; 65535us; 16497us; 65535us; 65535us; 65535us; 16499us; 65535us; 16501us; 65535us; 65535us; 65535us; 16503us; 16504us; 65535us; 65535us; 16506us; 16508us; |]
let _fsyacc_reductions ()  =    [| 
# 526 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> AstTreeHead in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startstart));
# 535 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Final in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "./Ast/GslParser.fsy"
                                    AstTreeHead(_1) 
                   )
# 61 "./Ast/GslParser.fsy"
                 : AstTreeHead));
# 546 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_CodeSection in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "./Ast/GslParser.fsy"
                                               AstNode.Block(Node.wrapNode _1) 
                   )
# 64 "./Ast/GslParser.fsy"
                 : 'gentype_Final));
# 557 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "./Ast/GslParser.fsy"
                                               AstNode.Block(Node.wrapNode []) 
                   )
# 65 "./Ast/GslParser.fsy"
                 : 'gentype_Final));
# 567 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_CodeSection in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "./Ast/GslParser.fsy"
                                                               AstNode.Block(Node.wrapNode _2) 
                   )
# 68 "./Ast/GslParser.fsy"
                 : 'gentype_ScopedBlock));
# 578 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Line in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "./Ast/GslParser.fsy"
                                                               match _1 with | Some(l) -> [l] | None -> [] 
                   )
# 71 "./Ast/GslParser.fsy"
                 : 'gentype_CodeSection));
# 589 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Line in
            let _2 = parseState.GetInput(2) :?> 'gentype_CodeSection in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "./Ast/GslParser.fsy"
                                                               match _1 with | Some(l) -> l::_2 | None -> _2 
                   )
# 72 "./Ast/GslParser.fsy"
                 : 'gentype_CodeSection));
# 601 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "./Ast/GslParser.fsy"
                                        None 
                   )
# 76 "./Ast/GslParser.fsy"
                 : 'gentype_Line));
# 611 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AssemblyPart in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "./Ast/GslParser.fsy"
                                                            Some(_1) 
                   )
# 77 "./Ast/GslParser.fsy"
                 : 'gentype_Line));
# 622 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "./Ast/GslParser.fsy"
                                                    Some(AstNode.Docstring(Node.tokenAsNode _1)) 
                   )
# 78 "./Ast/GslParser.fsy"
                 : 'gentype_Line));
# 633 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_L2ExpLine in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "./Ast/GslParser.fsy"
                                                  Some(_1) 
                   )
# 79 "./Ast/GslParser.fsy"
                 : 'gentype_Line));
# 644 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_RoughageLineList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "./Ast/GslParser.fsy"
                                                                           Some(AstNode.Block(Node.wrapNode _2)) 
                   )
# 80 "./Ast/GslParser.fsy"
                 : 'gentype_Line));
# 655 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Pragma in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "./Ast/GslParser.fsy"
                                                            Some(_1) 
                   )
# 81 "./Ast/GslParser.fsy"
                 : 'gentype_Line));
# 666 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TypedVariableDeclaration in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "./Ast/GslParser.fsy"
                                                            Some(_1) 
                   )
# 82 "./Ast/GslParser.fsy"
                 : 'gentype_Line));
# 677 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_FunctionCall in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "./Ast/GslParser.fsy"
                                                            Some(_1) 
                   )
# 83 "./Ast/GslParser.fsy"
                 : 'gentype_Line));
# 688 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_FunctionDeclaration in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "./Ast/GslParser.fsy"
                                                            Some(_1) 
                   )
# 84 "./Ast/GslParser.fsy"
                 : 'gentype_Line));
# 699 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ScopedBlock in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "./Ast/GslParser.fsy"
                                                            Some(_1) 
                   )
# 85 "./Ast/GslParser.fsy"
                 : 'gentype_Line));
# 710 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "./Ast/GslParser.fsy"
                                               (Utils.tokenToVariable _1 NotYetTyped) 
                   )
# 95 "./Ast/GslParser.fsy"
                 : 'gentype_PragmaValue));
# 721 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "./Ast/GslParser.fsy"
                                               AstNode.String(Node.tokenAsNode _1) 
                   )
# 96 "./Ast/GslParser.fsy"
                 : 'gentype_PragmaValue));
# 732 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_PragmaValue in
            let _2 = parseState.GetInput(2) :?> 'gentype_PragmaValues in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "./Ast/GslParser.fsy"
                                                      _1::_2 
                   )
# 99 "./Ast/GslParser.fsy"
                 : 'gentype_PragmaValues));
# 744 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_PragmaValue in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "./Ast/GslParser.fsy"
                                                      [_1] 
                   )
# 100 "./Ast/GslParser.fsy"
                 : 'gentype_PragmaValues));
# 755 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            let _2 = parseState.GetInput(2) :?> 'gentype_PragmaValues in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "./Ast/GslParser.fsy"
                                                (Create.pragma _1 _2) 
                   )
# 103 "./Ast/GslParser.fsy"
                 : 'gentype_Pragma));
# 767 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "./Ast/GslParser.fsy"
                                   (Create.pragma _1 []) 
                   )
# 104 "./Ast/GslParser.fsy"
                 : 'gentype_Pragma));
# 778 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Pragma in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "./Ast/GslParser.fsy"
                                    [_1]
                   )
# 107 "./Ast/GslParser.fsy"
                 : 'gentype_Pragmas));
# 789 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Pragma in
            let _2 = parseState.GetInput(2) :?> 'gentype_Pragmas in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "./Ast/GslParser.fsy"
                                            _1::_2
                   )
# 108 "./Ast/GslParser.fsy"
                 : 'gentype_Pragmas));
# 801 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Pragmas in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "./Ast/GslParser.fsy"
                                                   _2 
                   )
# 111 "./Ast/GslParser.fsy"
                 : 'gentype_InlinePragmas));
# 812 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Pragmas in
            let _4 = parseState.GetInput(4) :?> 'gentype_InlinePragmas in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "./Ast/GslParser.fsy"
                                                                 _2@_4 
                   )
# 112 "./Ast/GslParser.fsy"
                 : 'gentype_InlinePragmas));
# 824 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> PString in
            let _4 = parseState.GetInput(4) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "./Ast/GslParser.fsy"
                                                            Create.variableBinding _2 NotYetTyped (Utils.tokenToVariable _4 NotYetTyped) 
                   )
# 121 "./Ast/GslParser.fsy"
                 : 'gentype_TypedVariableDeclaration));
# 836 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> PString in
            let _4 = parseState.GetInput(4) :?> 'gentype_Exp in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "./Ast/GslParser.fsy"
                                                                     Create.variableBinding _2 NotYetTyped _4 
                   )
# 122 "./Ast/GslParser.fsy"
                 : 'gentype_TypedVariableDeclaration));
# 848 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> PString in
            let _4 = parseState.GetInput(4) :?> 'gentype_CompletePart in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "./Ast/GslParser.fsy"
                                                                     Create.variableBinding _2 PartType _4 
                   )
# 123 "./Ast/GslParser.fsy"
                 : 'gentype_TypedVariableDeclaration));
# 860 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> PString in
            let _4 = parseState.GetInput(4) :?> 'gentype_AssemblyPart in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "./Ast/GslParser.fsy"
                                                                     Create.variableBinding _2 PartType _4 
                   )
# 124 "./Ast/GslParser.fsy"
                 : 'gentype_TypedVariableDeclaration));
# 872 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "./Ast/GslParser.fsy"
                                [ _1.Item ] 
                   )
# 132 "./Ast/GslParser.fsy"
                 : 'gentype_FunctionDefArgs));
# 883 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            let _3 = parseState.GetInput(3) :?> 'gentype_FunctionDefArgs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "./Ast/GslParser.fsy"
                                                      _1.Item::_3 
                   )
# 133 "./Ast/GslParser.fsy"
                 : 'gentype_FunctionDefArgs));
# 895 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> PString in
            let _4 = parseState.GetInput(4) :?> 'gentype_FunctionDefArgs in
            let _7 = parseState.GetInput(7) :?> 'gentype_CodeSection in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "./Ast/GslParser.fsy"
                                                                                         Create.functionDefinition _2 _4 _7 
                   )
# 136 "./Ast/GslParser.fsy"
                 : 'gentype_FunctionDeclaration));
# 908 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> PString in
            let _6 = parseState.GetInput(6) :?> 'gentype_CodeSection in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "./Ast/GslParser.fsy"
                                                                         Create.functionDefinition _2 [] _6 
                   )
# 137 "./Ast/GslParser.fsy"
                 : 'gentype_FunctionDeclaration));
# 920 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "./Ast/GslParser.fsy"
                                        Create.typedValue NotYetTyped (Utils.tokenToVariable _1 NotYetTyped) 
                   )
# 145 "./Ast/GslParser.fsy"
                 : 'gentype_TypedValue));
# 931 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exp in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "./Ast/GslParser.fsy"
                                           Create.typedValue NotYetTyped _1 
                   )
# 146 "./Ast/GslParser.fsy"
                 : 'gentype_TypedValue));
# 942 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_CompletePart in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "./Ast/GslParser.fsy"
                                           Create.typedValue PartType _1 
                   )
# 147 "./Ast/GslParser.fsy"
                 : 'gentype_TypedValue));
# 953 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AssemblyPart in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "./Ast/GslParser.fsy"
                                           Create.typedValue PartType _1 
                   )
# 148 "./Ast/GslParser.fsy"
                 : 'gentype_TypedValue));
# 964 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TypedValue in
            let _3 = parseState.GetInput(3) :?> 'gentype_CommaSeparatedTypedValues in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "./Ast/GslParser.fsy"
                                                                         _1::_3 
                   )
# 152 "./Ast/GslParser.fsy"
                 : 'gentype_CommaSeparatedTypedValues));
# 976 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_TypedValue in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "./Ast/GslParser.fsy"
                                        [_1] 
                   )
# 153 "./Ast/GslParser.fsy"
                 : 'gentype_CommaSeparatedTypedValues));
# 987 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            let _3 = parseState.GetInput(3) :?> 'gentype_CommaSeparatedTypedValues in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "./Ast/GslParser.fsy"
                                                                        Create.functionCall _1 _3 
                   )
# 156 "./Ast/GslParser.fsy"
                 : 'gentype_FunctionCall));
# 999 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "./Ast/GslParser.fsy"
                                              Create.functionCall _1 [] 
                   )
# 157 "./Ast/GslParser.fsy"
                 : 'gentype_FunctionCall));
# 1010 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PInt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "./Ast/GslParser.fsy"
                                           AstNode.Int(Node.tokenAsNode _1) 
                   )
# 165 "./Ast/GslParser.fsy"
                 : 'gentype_IntLiteral));
# 1021 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PInt in
            let _3 = parseState.GetInput(3) :?> PInt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "./Ast/GslParser.fsy"
                                           Create.float _1 _3 
                   )
# 168 "./Ast/GslParser.fsy"
                 : 'gentype_FloatLiteral));
# 1033 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "./Ast/GslParser.fsy"
                                           AstNode.String(Node.tokenAsNode _1) 
                   )
# 171 "./Ast/GslParser.fsy"
                 : 'gentype_StringLiteral));
# 1044 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_IntLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "./Ast/GslParser.fsy"
                                                        _1 
                   )
# 178 "./Ast/GslParser.fsy"
                 : 'gentype_Exp));
# 1055 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StringLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "./Ast/GslParser.fsy"
                                                        _1 
                   )
# 179 "./Ast/GslParser.fsy"
                 : 'gentype_Exp));
# 1066 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_FloatLiteral in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "./Ast/GslParser.fsy"
                                                        _1 
                   )
# 180 "./Ast/GslParser.fsy"
                 : 'gentype_Exp));
# 1077 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "./Ast/GslParser.fsy"
                                                        (Utils.tokenToVariable _1 NotYetTyped) 
                   )
# 181 "./Ast/GslParser.fsy"
                 : 'gentype_Exp));
# 1088 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Exp in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "./Ast/GslParser.fsy"
                                                        _2 
                   )
# 182 "./Ast/GslParser.fsy"
                 : 'gentype_Exp));
# 1099 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Exp in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "./Ast/GslParser.fsy"
                                                        (Create.negation _2) 
                   )
# 183 "./Ast/GslParser.fsy"
                 : 'gentype_Exp));
# 1110 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exp in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exp in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "./Ast/GslParser.fsy"
                                                        (Create.binaryOperation Multiply _1 _3) 
                   )
# 184 "./Ast/GslParser.fsy"
                 : 'gentype_Exp));
# 1122 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exp in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exp in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "./Ast/GslParser.fsy"
                                                        (Create.binaryOperation Divide _1 _3) 
                   )
# 185 "./Ast/GslParser.fsy"
                 : 'gentype_Exp));
# 1134 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exp in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exp in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "./Ast/GslParser.fsy"
                                                        (Create.binaryOperation Add _1 _3) 
                   )
# 186 "./Ast/GslParser.fsy"
                 : 'gentype_Exp));
# 1146 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exp in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exp in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "./Ast/GslParser.fsy"
                                                        (Create.binaryOperation Subtract _1 _3) 
                   )
# 187 "./Ast/GslParser.fsy"
                 : 'gentype_Exp));
# 1158 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "./Ast/GslParser.fsy"
                                       match _1.Item.Split([| '-' |]) with
                                       | [| a;b;c |] -> { Linker.Linker1 = a ; Linker2 = b; Orient = c}
                                       | _ -> failwithf "bad linker format '%s'" (_1.Item)
                                     
                   )
# 194 "./Ast/GslParser.fsy"
                 : 'gentype_Linker));
# 1172 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AssemblyPart in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "./Ast/GslParser.fsy"
                                                           _2 
                   )
# 200 "./Ast/GslParser.fsy"
                 : 'gentype_Part));
# 1183 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Linker in
            let _3 = parseState.GetInput(3) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "./Ast/GslParser.fsy"
                                                           Parts.createGenePart _3 (Some(_1)) 
                   )
# 202 "./Ast/GslParser.fsy"
                 : 'gentype_Part));
# 1195 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "./Ast/GslParser.fsy"
                                                           Parts.createGenePart _1 None 
                   )
# 204 "./Ast/GslParser.fsy"
                 : 'gentype_Part));
# 1206 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PUnit in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "./Ast/GslParser.fsy"
                                                           Parts.createPartWithBase (AstNode.Marker(Node.tokenAsNode _1)) 
                   )
# 205 "./Ast/GslParser.fsy"
                 : 'gentype_Part));
# 1217 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "./Ast/GslParser.fsy"
                                                           Parts.createPartWithBase (AstNode.InlineDna(Node.tokenAsNodeAfter uppercase _2)) 
                   )
# 207 "./Ast/GslParser.fsy"
                 : 'gentype_Part));
# 1228 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "./Ast/GslParser.fsy"
                                                           Parts.createPartWithBase (AstNode.InlineProtein(Node.tokenAsNodeAfter uppercase _3))
                   )
# 209 "./Ast/GslParser.fsy"
                 : 'gentype_Part));
# 1239 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "./Ast/GslParser.fsy"
                                                           Parts.createPartWithBase (AstNode.InlineProtein(Node.tokenAsNodeAfter (fun s -> (s |> uppercase, "*") ||> (+) ) _3 )) 
                   )
# 211 "./Ast/GslParser.fsy"
                 : 'gentype_Part));
# 1250 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "./Ast/GslParser.fsy"
                                                           Parts.createPartWithBase (AstNode.InlineProtein(Node.wrapNode "*")) 
                   )
# 213 "./Ast/GslParser.fsy"
                 : 'gentype_Part));
# 1260 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PUnit in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "./Ast/GslParser.fsy"
                                                           Parts.createPartWithBase (AstNode.HetBlock(Node.tokenAsNode _1)) 
                   )
# 214 "./Ast/GslParser.fsy"
                 : 'gentype_Part));
# 1271 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "./Ast/GslParser.fsy"
                                                           Parts.createPartWithBase (Utils.tokenToVariable _1 PartType) 
                   )
# 216 "./Ast/GslParser.fsy"
                 : 'gentype_Part));
# 1282 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "./Ast/GslParser.fsy"
                                                           Parts.createPartWithBase (AstNode.PartId(Node.tokenAsNode _2)) 
                   )
# 218 "./Ast/GslParser.fsy"
                 : 'gentype_Part));
# 1293 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Part in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "./Ast/GslParser.fsy"
                                           _1 
                   )
# 222 "./Ast/GslParser.fsy"
                 : 'gentype_PartMaybeMods));
# 1304 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Part in
            let _2 = parseState.GetInput(2) :?> 'gentype_ModList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "./Ast/GslParser.fsy"
                                           Parts.stuffModsIntoPart _1 _2 
                   )
# 223 "./Ast/GslParser.fsy"
                 : 'gentype_PartMaybeMods));
# 1316 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_PartMaybeMods in
            let _2 = parseState.GetInput(2) :?> 'gentype_InlinePragmas in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "./Ast/GslParser.fsy"
                                                               Parts.stuffPragmasIntoPart _1 _2 
                   )
# 228 "./Ast/GslParser.fsy"
                 : 'gentype_PartMaybePragma));
# 1328 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_PartMaybeMods in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "./Ast/GslParser.fsy"
                                                               _1 
                   )
# 229 "./Ast/GslParser.fsy"
                 : 'gentype_PartMaybePragma));
# 1339 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_PartMaybePragma in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "./Ast/GslParser.fsy"
                                             _1 
                   )
# 233 "./Ast/GslParser.fsy"
                 : 'gentype_PartFwdRev));
# 1350 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_PartMaybePragma in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "./Ast/GslParser.fsy"
                                                   Parts.revPart _2 
                   )
# 234 "./Ast/GslParser.fsy"
                 : 'gentype_PartFwdRev));
# 1361 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_PartFwdRev in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "./Ast/GslParser.fsy"
                                       _1
                   )
# 238 "./Ast/GslParser.fsy"
                 : 'gentype_CompletePart));
# 1372 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exp in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "./Ast/GslParser.fsy"
                                      (_1, None) 
                   )
# 245 "./Ast/GslParser.fsy"
                 : 'gentype_RelPos));
# 1383 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exp in
            let _2 = parseState.GetInput(2) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 "./Ast/GslParser.fsy"
                                      (_1, (Some _2)) 
                   )
# 246 "./Ast/GslParser.fsy"
                 : 'gentype_RelPos));
# 1395 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_RelPos in
            let _4 = parseState.GetInput(4) :?> 'gentype_RelPos in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "./Ast/GslParser.fsy"
                                                                                             Parts.createParseSlice _2 _4 false false 
                   )
# 249 "./Ast/GslParser.fsy"
                 : 'gentype_Slice));
# 1407 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> PUnit in
            let _3 = parseState.GetInput(3) :?> 'gentype_RelPos in
            let _5 = parseState.GetInput(5) :?> 'gentype_RelPos in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 "./Ast/GslParser.fsy"
                                                                                             Parts.createParseSlice _3 _5 true false 
                   )
# 250 "./Ast/GslParser.fsy"
                 : 'gentype_Slice));
# 1420 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_RelPos in
            let _4 = parseState.GetInput(4) :?> PUnit in
            let _5 = parseState.GetInput(5) :?> 'gentype_RelPos in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 "./Ast/GslParser.fsy"
                                                                                             Parts.createParseSlice _2 _5 false true 
                   )
# 251 "./Ast/GslParser.fsy"
                 : 'gentype_Slice));
# 1433 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> PUnit in
            let _3 = parseState.GetInput(3) :?> 'gentype_RelPos in
            let _5 = parseState.GetInput(5) :?> PUnit in
            let _6 = parseState.GetInput(6) :?> 'gentype_RelPos in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 "./Ast/GslParser.fsy"
                                                                                             Parts.createParseSlice _3 _6 true true 
                   )
# 252 "./Ast/GslParser.fsy"
                 : 'gentype_Slice));
# 1447 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 "./Ast/GslParser.fsy"
                                            Parts.createMutation _1 NT 
                   )
# 255 "./Ast/GslParser.fsy"
                 : 'gentype_Mod));
# 1458 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "./Ast/GslParser.fsy"
                                            Parts.createMutation _1 AA 
                   )
# 256 "./Ast/GslParser.fsy"
                 : 'gentype_Mod));
# 1469 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Slice in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "./Ast/GslParser.fsy"
                                            _1 
                   )
# 257 "./Ast/GslParser.fsy"
                 : 'gentype_Mod));
# 1480 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 "./Ast/GslParser.fsy"
                                         AstNode.DotMod(Node.tokenAsNode _2) 
                   )
# 258 "./Ast/GslParser.fsy"
                 : 'gentype_Mod));
# 1491 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Mod in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "./Ast/GslParser.fsy"
                                                           [ _1 ] 
                   )
# 261 "./Ast/GslParser.fsy"
                 : 'gentype_ModList));
# 1502 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ModList in
            let _2 = parseState.GetInput(2) :?> 'gentype_Mod in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 262 "./Ast/GslParser.fsy"
                                                           _2 :: _1 
                   )
# 262 "./Ast/GslParser.fsy"
                 : 'gentype_ModList));
# 1514 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_CompletePart in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 "./Ast/GslParser.fsy"
                                                                   [_1] 
                   )
# 269 "./Ast/GslParser.fsy"
                 : 'gentype_PartList));
# 1525 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_CompletePart in
            let _2 = parseState.GetInput(2) :?> PUnit in
            let _3 = parseState.GetInput(3) :?> 'gentype_PartList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 270 "./Ast/GslParser.fsy"
                                                                   _1::_3 
                   )
# 270 "./Ast/GslParser.fsy"
                 : 'gentype_PartList));
# 1538 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_PartList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 275 "./Ast/GslParser.fsy"
                                           Parts.createAssemblyPart _1 
                   )
# 275 "./Ast/GslParser.fsy"
                 : 'gentype_AssemblyPart));
# 1549 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 285 "./Ast/GslParser.fsy"
                                     Node.tokenAsNode _1 
                   )
# 285 "./Ast/GslParser.fsy"
                 : 'gentype_L2IdWrap));
# 1560 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 286 "./Ast/GslParser.fsy"
                                     Node.tokenAsNode _1 
                   )
# 286 "./Ast/GslParser.fsy"
                 : 'gentype_L2IdWrap));
# 1571 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_L2IdWrap in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 296 "./Ast/GslParser.fsy"
                                           L2.createL2Id None _1 
                   )
# 296 "./Ast/GslParser.fsy"
                 : 'gentype_L2Id));
# 1582 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_L2IdWrap in
            let _3 = parseState.GetInput(3) :?> 'gentype_L2IdWrap in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 297 "./Ast/GslParser.fsy"
                                                    L2.createL2Id (Some(_1)) _3 
                   )
# 297 "./Ast/GslParser.fsy"
                 : 'gentype_L2Id));
# 1594 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 301 "./Ast/GslParser.fsy"
                                      L2.createL2Id None (Node.tokenAsNode _1) 
                   )
# 301 "./Ast/GslParser.fsy"
                 : 'gentype_L2Promoter));
# 1605 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            let _3 = parseState.GetInput(3) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 302 "./Ast/GslParser.fsy"
                                                L2.createL2Id (Some(Node.tokenAsNode _1)) (Node.tokenAsNode _3) 
                   )
# 302 "./Ast/GslParser.fsy"
                 : 'gentype_L2Promoter));
# 1617 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            let _3 = parseState.GetInput(3) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 303 "./Ast/GslParser.fsy"
                                                L2.createL2Id (Some(Node.tokenAsNode _1)) (Node.tokenAsNode _3) 
                   )
# 303 "./Ast/GslParser.fsy"
                 : 'gentype_L2Promoter));
# 1629 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_CompletePart in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 304 "./Ast/GslParser.fsy"
                                          _1 
                   )
# 304 "./Ast/GslParser.fsy"
                 : 'gentype_L2Promoter));
# 1640 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_L2Id in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 309 "./Ast/GslParser.fsy"
                                          _1 
                   )
# 309 "./Ast/GslParser.fsy"
                 : 'gentype_L2Locus));
# 1651 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_L2Promoter in
            let _3 = parseState.GetInput(3) :?> 'gentype_L2Id in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 313 "./Ast/GslParser.fsy"
                                                          L2.createL2Element _1 _3 
                   )
# 313 "./Ast/GslParser.fsy"
                 : 'gentype_L2ExpElement));
# 1663 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_L2ExpElement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 317 "./Ast/GslParser.fsy"
                                          [_1] 
                   )
# 317 "./Ast/GslParser.fsy"
                 : 'gentype_L2ExpElementList));
# 1674 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_L2ExpElement in
            let _2 = parseState.GetInput(2) :?> PUnit in
            let _3 = parseState.GetInput(3) :?> 'gentype_L2ExpElementList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 318 "./Ast/GslParser.fsy"
                                                                     _1::_3 
                   )
# 318 "./Ast/GslParser.fsy"
                 : 'gentype_L2ExpElementList));
# 1687 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_L2Locus in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 322 "./Ast/GslParser.fsy"
                                                  L2.createL2Expression (Some(_1)) [] 
                   )
# 322 "./Ast/GslParser.fsy"
                 : 'gentype_L2ExpLine));
# 1698 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_L2Locus in
            let _2 = parseState.GetInput(2) :?> PUnit in
            let _3 = parseState.GetInput(3) :?> 'gentype_L2ExpElementList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 323 "./Ast/GslParser.fsy"
                                                                 L2.createL2Expression (Some(_1)) _3 
                   )
# 323 "./Ast/GslParser.fsy"
                 : 'gentype_L2ExpLine));
# 1711 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_L2ExpElementList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 324 "./Ast/GslParser.fsy"
                                                    L2.createL2Expression None _1 
                   )
# 324 "./Ast/GslParser.fsy"
                 : 'gentype_L2ExpLine));
# 1722 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 332 "./Ast/GslParser.fsy"
                                 L2.createL2IdNode None (Node.tokenAsNode _1) 
                   )
# 332 "./Ast/GslParser.fsy"
                 : 'gentype_RID));
# 1733 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> PString in
            let _3 = parseState.GetInput(3) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 333 "./Ast/GslParser.fsy"
                                       L2.createL2IdNode (Some(Node.tokenAsNode _1)) (Node.tokenAsNode _3) 
                   )
# 333 "./Ast/GslParser.fsy"
                 : 'gentype_RID));
# 1745 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> PString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 336 "./Ast/GslParser.fsy"
                                                          Node.tokenAsNode _2 
                   )
# 336 "./Ast/GslParser.fsy"
                 : 'gentype_RoughageMarker));
# 1756 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_RoughageMarker in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 340 "./Ast/GslParser.fsy"
                                            Some(_1) 
                   )
# 340 "./Ast/GslParser.fsy"
                 : 'gentype_RoughageMarkerMaybe));
# 1767 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 341 "./Ast/GslParser.fsy"
                             None 
                   )
# 341 "./Ast/GslParser.fsy"
                 : 'gentype_RoughageMarkerMaybe));
# 1777 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_RID in
            let _3 = parseState.GetInput(3) :?> 'gentype_RID in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 344 "./Ast/GslParser.fsy"
                                               L2.createRoughagePart RoughageFwd _1 _3 
                   )
# 344 "./Ast/GslParser.fsy"
                 : 'gentype_RoughagePartFwd));
# 1789 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_RID in
            let _3 = parseState.GetInput(3) :?> 'gentype_RID in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 347 "./Ast/GslParser.fsy"
                                            L2.createRoughagePart RoughageRev _3 _1 
                   )
# 347 "./Ast/GslParser.fsy"
                 : 'gentype_RoughagePartRev));
# 1801 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_RoughagePartFwd in
            let _2 = parseState.GetInput(2) :?> 'gentype_RoughageMarkerMaybe in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 352 "./Ast/GslParser.fsy"
                                                                 L2.createRoughageElement _1 None _2 
                   )
# 352 "./Ast/GslParser.fsy"
                 : 'gentype_RoughageElement));
# 1813 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_RoughagePartRev in
            let _3 = parseState.GetInput(3) :?> 'gentype_RoughagePartFwd in
            let _4 = parseState.GetInput(4) :?> 'gentype_RoughageMarkerMaybe in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 354 "./Ast/GslParser.fsy"
                                                                                        L2.createRoughageElement _1 (Some(_3)) _4 
                   )
# 354 "./Ast/GslParser.fsy"
                 : 'gentype_RoughageElement));
# 1826 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_RoughageElement in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 357 "./Ast/GslParser.fsy"
                                             [_1] 
                   )
# 357 "./Ast/GslParser.fsy"
                 : 'gentype_RoughageElementList));
# 1837 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_RoughageElement in
            let _4 = parseState.GetInput(4) :?> 'gentype_RoughageElementList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 358 "./Ast/GslParser.fsy"
                                                                             _1::_4 
                   )
# 358 "./Ast/GslParser.fsy"
                 : 'gentype_RoughageElementList));
# 1849 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_RID in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 362 "./Ast/GslParser.fsy"
                                         (Some(_1), None) 
                   )
# 362 "./Ast/GslParser.fsy"
                 : 'gentype_RoughageLocus));
# 1860 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_RID in
            let _3 = parseState.GetInput(3) :?> 'gentype_RoughageMarker in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 363 "./Ast/GslParser.fsy"
                                                      (Some(_1), Some(_3)) 
                   )
# 363 "./Ast/GslParser.fsy"
                 : 'gentype_RoughageLocus));
# 1872 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_RoughageLocus in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 366 "./Ast/GslParser.fsy"
                                                  L2.createRoughageLine _1 [] 
                   )
# 366 "./Ast/GslParser.fsy"
                 : 'gentype_RoughageLine));
# 1883 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_RoughageLocus in
            let _4 = parseState.GetInput(4) :?> 'gentype_RoughageElementList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 367 "./Ast/GslParser.fsy"
                                                                            L2.createRoughageLine _1 _4 
                   )
# 367 "./Ast/GslParser.fsy"
                 : 'gentype_RoughageLine));
# 1895 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_RoughageElementList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 368 "./Ast/GslParser.fsy"
                                                  L2.createRoughageLine (None, None) _1 
                   )
# 368 "./Ast/GslParser.fsy"
                 : 'gentype_RoughageLine));
# 1906 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_RoughageLine in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 371 "./Ast/GslParser.fsy"
                                                             [_1] 
                   )
# 371 "./Ast/GslParser.fsy"
                 : 'gentype_RoughageLineList));
# 1917 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_RoughageLineList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 372 "./Ast/GslParser.fsy"
                                                             _2 
                   )
# 372 "./Ast/GslParser.fsy"
                 : 'gentype_RoughageLineList));
# 1928 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 373 "./Ast/GslParser.fsy"
                                                             [] 
                   )
# 373 "./Ast/GslParser.fsy"
                 : 'gentype_RoughageLineList));
# 1938 "Ast/GslParser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_RoughageLine in
            let _2 = parseState.GetInput(2) :?> 'gentype_RoughageLineList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 374 "./Ast/GslParser.fsy"
                                                             _1::_2 
                   )
# 374 "./Ast/GslParser.fsy"
                 : 'gentype_RoughageLineList));
|]
# 1951 "Ast/GslParser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 50;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let start lexer lexbuf : AstTreeHead =
    engine lexer lexbuf 0 :?> _
